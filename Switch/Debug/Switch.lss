
Switch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000798  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000798  0000080c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000009d8  00000000  00000000  00000810  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008d1  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e9       	ldi	r30, 0x98	; 152
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 84 03 	call	0x708	; 0x708 <main>
  7a:	0c 94 ca 03 	jmp	0x794	; 0x794 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_voidSetPortDir>:
#include "DIO_private.h"
#include "DIO_config.h"
#include "DIO_interface.h"

void DIO_voidSetPortDir(u8 Copy_u8Port,u8 Copy_u8Dir)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <DIO_voidSetPortDir+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <DIO_voidSetPortDir+0x8>
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	89 83       	std	Y+1, r24	; 0x01
  90:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8Port)
  92:	89 81       	ldd	r24, Y+1	; 0x01
  94:	28 2f       	mov	r18, r24
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	3c 83       	std	Y+4, r19	; 0x04
  9a:	2b 83       	std	Y+3, r18	; 0x03
  9c:	8b 81       	ldd	r24, Y+3	; 0x03
  9e:	9c 81       	ldd	r25, Y+4	; 0x04
  a0:	82 30       	cpi	r24, 0x02	; 2
  a2:	91 05       	cpc	r25, r1
  a4:	d9 f0       	breq	.+54     	; 0xdc <DIO_voidSetPortDir+0x5a>
  a6:	2b 81       	ldd	r18, Y+3	; 0x03
  a8:	3c 81       	ldd	r19, Y+4	; 0x04
  aa:	23 30       	cpi	r18, 0x03	; 3
  ac:	31 05       	cpc	r19, r1
  ae:	34 f4       	brge	.+12     	; 0xbc <DIO_voidSetPortDir+0x3a>
  b0:	8b 81       	ldd	r24, Y+3	; 0x03
  b2:	9c 81       	ldd	r25, Y+4	; 0x04
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	91 05       	cpc	r25, r1
  b8:	61 f0       	breq	.+24     	; 0xd2 <DIO_voidSetPortDir+0x50>
  ba:	1e c0       	rjmp	.+60     	; 0xf8 <DIO_voidSetPortDir+0x76>
  bc:	2b 81       	ldd	r18, Y+3	; 0x03
  be:	3c 81       	ldd	r19, Y+4	; 0x04
  c0:	23 30       	cpi	r18, 0x03	; 3
  c2:	31 05       	cpc	r19, r1
  c4:	81 f0       	breq	.+32     	; 0xe6 <DIO_voidSetPortDir+0x64>
  c6:	8b 81       	ldd	r24, Y+3	; 0x03
  c8:	9c 81       	ldd	r25, Y+4	; 0x04
  ca:	84 30       	cpi	r24, 0x04	; 4
  cc:	91 05       	cpc	r25, r1
  ce:	81 f0       	breq	.+32     	; 0xf0 <DIO_voidSetPortDir+0x6e>
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <DIO_voidSetPortDir+0x76>
	{
	case PORTA_REG:DDRA=Copy_u8Dir;break;
  d2:	ea e3       	ldi	r30, 0x3A	; 58
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	8a 81       	ldd	r24, Y+2	; 0x02
  d8:	80 83       	st	Z, r24
  da:	0e c0       	rjmp	.+28     	; 0xf8 <DIO_voidSetPortDir+0x76>
	case PORTB_REG:DDRB=Copy_u8Dir;break;
  dc:	e7 e3       	ldi	r30, 0x37	; 55
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	8a 81       	ldd	r24, Y+2	; 0x02
  e2:	80 83       	st	Z, r24
  e4:	09 c0       	rjmp	.+18     	; 0xf8 <DIO_voidSetPortDir+0x76>
	case PORTC_REG:DDRC=Copy_u8Dir;break;
  e6:	e4 e3       	ldi	r30, 0x34	; 52
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	8a 81       	ldd	r24, Y+2	; 0x02
  ec:	80 83       	st	Z, r24
  ee:	04 c0       	rjmp	.+8      	; 0xf8 <DIO_voidSetPortDir+0x76>
	case PORTD_REG:DDRD=Copy_u8Dir;break;
  f0:	e1 e3       	ldi	r30, 0x31	; 49
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	8a 81       	ldd	r24, Y+2	; 0x02
  f6:	80 83       	st	Z, r24
	}

}
  f8:	0f 90       	pop	r0
  fa:	0f 90       	pop	r0
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	cf 91       	pop	r28
 102:	df 91       	pop	r29
 104:	08 95       	ret

00000106 <DIO_voidSetPinDir>:
void DIO_voidSetPinDir(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Dir)
{
 106:	df 93       	push	r29
 108:	cf 93       	push	r28
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	27 97       	sbiw	r28, 0x07	; 7
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	f8 94       	cli
 114:	de bf       	out	0x3e, r29	; 62
 116:	0f be       	out	0x3f, r0	; 63
 118:	cd bf       	out	0x3d, r28	; 61
 11a:	89 83       	std	Y+1, r24	; 0x01
 11c:	6a 83       	std	Y+2, r22	; 0x02
 11e:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Pin <=7)
 120:	8a 81       	ldd	r24, Y+2	; 0x02
 122:	88 30       	cpi	r24, 0x08	; 8
 124:	08 f0       	brcs	.+2      	; 0x128 <DIO_voidSetPinDir+0x22>
 126:	ec c0       	rjmp	.+472    	; 0x300 <DIO_voidSetPinDir+0x1fa>
	{
		if (Copy_u8Dir==PIN_DIR_OUT)
 128:	8b 81       	ldd	r24, Y+3	; 0x03
 12a:	81 30       	cpi	r24, 0x01	; 1
 12c:	09 f0       	breq	.+2      	; 0x130 <DIO_voidSetPinDir+0x2a>
 12e:	70 c0       	rjmp	.+224    	; 0x210 <DIO_voidSetPinDir+0x10a>
		{
			switch(Copy_u8Port)
 130:	89 81       	ldd	r24, Y+1	; 0x01
 132:	28 2f       	mov	r18, r24
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	3f 83       	std	Y+7, r19	; 0x07
 138:	2e 83       	std	Y+6, r18	; 0x06
 13a:	8e 81       	ldd	r24, Y+6	; 0x06
 13c:	9f 81       	ldd	r25, Y+7	; 0x07
 13e:	82 30       	cpi	r24, 0x02	; 2
 140:	91 05       	cpc	r25, r1
 142:	51 f1       	breq	.+84     	; 0x198 <DIO_voidSetPinDir+0x92>
 144:	2e 81       	ldd	r18, Y+6	; 0x06
 146:	3f 81       	ldd	r19, Y+7	; 0x07
 148:	23 30       	cpi	r18, 0x03	; 3
 14a:	31 05       	cpc	r19, r1
 14c:	34 f4       	brge	.+12     	; 0x15a <DIO_voidSetPinDir+0x54>
 14e:	8e 81       	ldd	r24, Y+6	; 0x06
 150:	9f 81       	ldd	r25, Y+7	; 0x07
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	91 05       	cpc	r25, r1
 156:	61 f0       	breq	.+24     	; 0x170 <DIO_voidSetPinDir+0x6a>
 158:	d3 c0       	rjmp	.+422    	; 0x300 <DIO_voidSetPinDir+0x1fa>
 15a:	2e 81       	ldd	r18, Y+6	; 0x06
 15c:	3f 81       	ldd	r19, Y+7	; 0x07
 15e:	23 30       	cpi	r18, 0x03	; 3
 160:	31 05       	cpc	r19, r1
 162:	71 f1       	breq	.+92     	; 0x1c0 <DIO_voidSetPinDir+0xba>
 164:	8e 81       	ldd	r24, Y+6	; 0x06
 166:	9f 81       	ldd	r25, Y+7	; 0x07
 168:	84 30       	cpi	r24, 0x04	; 4
 16a:	91 05       	cpc	r25, r1
 16c:	e9 f1       	breq	.+122    	; 0x1e8 <DIO_voidSetPinDir+0xe2>
 16e:	c8 c0       	rjmp	.+400    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			{
			case PORTA_REG : SET_BIT(DDRA,Copy_u8Pin);break;
 170:	aa e3       	ldi	r26, 0x3A	; 58
 172:	b0 e0       	ldi	r27, 0x00	; 0
 174:	ea e3       	ldi	r30, 0x3A	; 58
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	48 2f       	mov	r20, r24
 17c:	8a 81       	ldd	r24, Y+2	; 0x02
 17e:	28 2f       	mov	r18, r24
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 2e       	mov	r0, r18
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_voidSetPinDir+0x88>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	0a 94       	dec	r0
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_voidSetPinDir+0x84>
 192:	84 2b       	or	r24, r20
 194:	8c 93       	st	X, r24
 196:	b4 c0       	rjmp	.+360    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			case PORTB_REG : SET_BIT(DDRB,Copy_u8Pin);break;
 198:	a7 e3       	ldi	r26, 0x37	; 55
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	e7 e3       	ldi	r30, 0x37	; 55
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	48 2f       	mov	r20, r24
 1a4:	8a 81       	ldd	r24, Y+2	; 0x02
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 2e       	mov	r0, r18
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_voidSetPinDir+0xb0>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	0a 94       	dec	r0
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_voidSetPinDir+0xac>
 1ba:	84 2b       	or	r24, r20
 1bc:	8c 93       	st	X, r24
 1be:	a0 c0       	rjmp	.+320    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			case PORTC_REG : SET_BIT(DDRC,Copy_u8Pin);break;
 1c0:	a4 e3       	ldi	r26, 0x34	; 52
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	e4 e3       	ldi	r30, 0x34	; 52
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	48 2f       	mov	r20, r24
 1cc:	8a 81       	ldd	r24, Y+2	; 0x02
 1ce:	28 2f       	mov	r18, r24
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 2e       	mov	r0, r18
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_voidSetPinDir+0xd8>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	0a 94       	dec	r0
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_voidSetPinDir+0xd4>
 1e2:	84 2b       	or	r24, r20
 1e4:	8c 93       	st	X, r24
 1e6:	8c c0       	rjmp	.+280    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			case PORTD_REG : SET_BIT(DDRD,Copy_u8Pin);break;
 1e8:	a1 e3       	ldi	r26, 0x31	; 49
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	e1 e3       	ldi	r30, 0x31	; 49
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	48 2f       	mov	r20, r24
 1f4:	8a 81       	ldd	r24, Y+2	; 0x02
 1f6:	28 2f       	mov	r18, r24
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 2e       	mov	r0, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_voidSetPinDir+0x100>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	0a 94       	dec	r0
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_voidSetPinDir+0xfc>
 20a:	84 2b       	or	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	78 c0       	rjmp	.+240    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			}
		}
		else if (Copy_u8Dir==PIN_DIR_IN)
 210:	8b 81       	ldd	r24, Y+3	; 0x03
 212:	88 23       	and	r24, r24
 214:	09 f0       	breq	.+2      	; 0x218 <DIO_voidSetPinDir+0x112>
 216:	74 c0       	rjmp	.+232    	; 0x300 <DIO_voidSetPinDir+0x1fa>
		{
			switch(Copy_u8Port)
 218:	89 81       	ldd	r24, Y+1	; 0x01
 21a:	28 2f       	mov	r18, r24
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	3d 83       	std	Y+5, r19	; 0x05
 220:	2c 83       	std	Y+4, r18	; 0x04
 222:	8c 81       	ldd	r24, Y+4	; 0x04
 224:	9d 81       	ldd	r25, Y+5	; 0x05
 226:	82 30       	cpi	r24, 0x02	; 2
 228:	91 05       	cpc	r25, r1
 22a:	61 f1       	breq	.+88     	; 0x284 <DIO_voidSetPinDir+0x17e>
 22c:	2c 81       	ldd	r18, Y+4	; 0x04
 22e:	3d 81       	ldd	r19, Y+5	; 0x05
 230:	23 30       	cpi	r18, 0x03	; 3
 232:	31 05       	cpc	r19, r1
 234:	34 f4       	brge	.+12     	; 0x242 <DIO_voidSetPinDir+0x13c>
 236:	8c 81       	ldd	r24, Y+4	; 0x04
 238:	9d 81       	ldd	r25, Y+5	; 0x05
 23a:	81 30       	cpi	r24, 0x01	; 1
 23c:	91 05       	cpc	r25, r1
 23e:	69 f0       	breq	.+26     	; 0x25a <DIO_voidSetPinDir+0x154>
 240:	5f c0       	rjmp	.+190    	; 0x300 <DIO_voidSetPinDir+0x1fa>
 242:	2c 81       	ldd	r18, Y+4	; 0x04
 244:	3d 81       	ldd	r19, Y+5	; 0x05
 246:	23 30       	cpi	r18, 0x03	; 3
 248:	31 05       	cpc	r19, r1
 24a:	89 f1       	breq	.+98     	; 0x2ae <DIO_voidSetPinDir+0x1a8>
 24c:	8c 81       	ldd	r24, Y+4	; 0x04
 24e:	9d 81       	ldd	r25, Y+5	; 0x05
 250:	84 30       	cpi	r24, 0x04	; 4
 252:	91 05       	cpc	r25, r1
 254:	09 f4       	brne	.+2      	; 0x258 <DIO_voidSetPinDir+0x152>
 256:	40 c0       	rjmp	.+128    	; 0x2d8 <DIO_voidSetPinDir+0x1d2>
 258:	53 c0       	rjmp	.+166    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			{
			case PORTA_REG : CLR_BIT(DDRA,Copy_u8Pin);break;
 25a:	aa e3       	ldi	r26, 0x3A	; 58
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	ea e3       	ldi	r30, 0x3A	; 58
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	48 2f       	mov	r20, r24
 266:	8a 81       	ldd	r24, Y+2	; 0x02
 268:	28 2f       	mov	r18, r24
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	02 2e       	mov	r0, r18
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_voidSetPinDir+0x172>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	0a 94       	dec	r0
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_voidSetPinDir+0x16e>
 27c:	80 95       	com	r24
 27e:	84 23       	and	r24, r20
 280:	8c 93       	st	X, r24
 282:	3e c0       	rjmp	.+124    	; 0x300 <DIO_voidSetPinDir+0x1fa>
			case PORTB_REG : CLR_BIT(DDRB,Copy_u8Pin);break;
 284:	a7 e3       	ldi	r26, 0x37	; 55
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	e7 e3       	ldi	r30, 0x37	; 55
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	48 2f       	mov	r20, r24
 290:	8a 81       	ldd	r24, Y+2	; 0x02
 292:	28 2f       	mov	r18, r24
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	02 2e       	mov	r0, r18
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_voidSetPinDir+0x19c>
 29e:	88 0f       	add	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	0a 94       	dec	r0
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_voidSetPinDir+0x198>
 2a6:	80 95       	com	r24
 2a8:	84 23       	and	r24, r20
 2aa:	8c 93       	st	X, r24
 2ac:	29 c0       	rjmp	.+82     	; 0x300 <DIO_voidSetPinDir+0x1fa>
			case PORTC_REG : CLR_BIT(DDRC,Copy_u8Pin);break;
 2ae:	a4 e3       	ldi	r26, 0x34	; 52
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	e4 e3       	ldi	r30, 0x34	; 52
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	48 2f       	mov	r20, r24
 2ba:	8a 81       	ldd	r24, Y+2	; 0x02
 2bc:	28 2f       	mov	r18, r24
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 2e       	mov	r0, r18
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_voidSetPinDir+0x1c6>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	0a 94       	dec	r0
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_voidSetPinDir+0x1c2>
 2d0:	80 95       	com	r24
 2d2:	84 23       	and	r24, r20
 2d4:	8c 93       	st	X, r24
 2d6:	14 c0       	rjmp	.+40     	; 0x300 <DIO_voidSetPinDir+0x1fa>
			case PORTD_REG : CLR_BIT(DDRD,Copy_u8Pin);break;
 2d8:	a1 e3       	ldi	r26, 0x31	; 49
 2da:	b0 e0       	ldi	r27, 0x00	; 0
 2dc:	e1 e3       	ldi	r30, 0x31	; 49
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	80 81       	ld	r24, Z
 2e2:	48 2f       	mov	r20, r24
 2e4:	8a 81       	ldd	r24, Y+2	; 0x02
 2e6:	28 2f       	mov	r18, r24
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	02 2e       	mov	r0, r18
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_voidSetPinDir+0x1f0>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	0a 94       	dec	r0
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_voidSetPinDir+0x1ec>
 2fa:	80 95       	com	r24
 2fc:	84 23       	and	r24, r20
 2fe:	8c 93       	st	X, r24
			}
		}
	}
}
 300:	27 96       	adiw	r28, 0x07	; 7
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	f8 94       	cli
 306:	de bf       	out	0x3e, r29	; 62
 308:	0f be       	out	0x3f, r0	; 63
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	cf 91       	pop	r28
 30e:	df 91       	pop	r29
 310:	08 95       	ret

00000312 <DIO_voidSetPortVal>:
void DIO_voidSetPortVal(u8 Copy_u8Port,u8 Copy_u8Val){
 312:	df 93       	push	r29
 314:	cf 93       	push	r28
 316:	00 d0       	rcall	.+0      	; 0x318 <DIO_voidSetPortVal+0x6>
 318:	00 d0       	rcall	.+0      	; 0x31a <DIO_voidSetPortVal+0x8>
 31a:	cd b7       	in	r28, 0x3d	; 61
 31c:	de b7       	in	r29, 0x3e	; 62
 31e:	89 83       	std	Y+1, r24	; 0x01
 320:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8Port)
 322:	89 81       	ldd	r24, Y+1	; 0x01
 324:	28 2f       	mov	r18, r24
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	3c 83       	std	Y+4, r19	; 0x04
 32a:	2b 83       	std	Y+3, r18	; 0x03
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	9c 81       	ldd	r25, Y+4	; 0x04
 330:	82 30       	cpi	r24, 0x02	; 2
 332:	91 05       	cpc	r25, r1
 334:	d9 f0       	breq	.+54     	; 0x36c <DIO_voidSetPortVal+0x5a>
 336:	2b 81       	ldd	r18, Y+3	; 0x03
 338:	3c 81       	ldd	r19, Y+4	; 0x04
 33a:	23 30       	cpi	r18, 0x03	; 3
 33c:	31 05       	cpc	r19, r1
 33e:	34 f4       	brge	.+12     	; 0x34c <DIO_voidSetPortVal+0x3a>
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	9c 81       	ldd	r25, Y+4	; 0x04
 344:	81 30       	cpi	r24, 0x01	; 1
 346:	91 05       	cpc	r25, r1
 348:	61 f0       	breq	.+24     	; 0x362 <DIO_voidSetPortVal+0x50>
 34a:	1e c0       	rjmp	.+60     	; 0x388 <DIO_voidSetPortVal+0x76>
 34c:	2b 81       	ldd	r18, Y+3	; 0x03
 34e:	3c 81       	ldd	r19, Y+4	; 0x04
 350:	23 30       	cpi	r18, 0x03	; 3
 352:	31 05       	cpc	r19, r1
 354:	81 f0       	breq	.+32     	; 0x376 <DIO_voidSetPortVal+0x64>
 356:	8b 81       	ldd	r24, Y+3	; 0x03
 358:	9c 81       	ldd	r25, Y+4	; 0x04
 35a:	84 30       	cpi	r24, 0x04	; 4
 35c:	91 05       	cpc	r25, r1
 35e:	81 f0       	breq	.+32     	; 0x380 <DIO_voidSetPortVal+0x6e>
 360:	13 c0       	rjmp	.+38     	; 0x388 <DIO_voidSetPortVal+0x76>
	{
	case PORTA_REG:PORTA=Copy_u8Val;break;
 362:	eb e3       	ldi	r30, 0x3B	; 59
 364:	f0 e0       	ldi	r31, 0x00	; 0
 366:	8a 81       	ldd	r24, Y+2	; 0x02
 368:	80 83       	st	Z, r24
 36a:	0e c0       	rjmp	.+28     	; 0x388 <DIO_voidSetPortVal+0x76>
	case PORTB_REG:PORTB=Copy_u8Val;break;
 36c:	e8 e3       	ldi	r30, 0x38	; 56
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	8a 81       	ldd	r24, Y+2	; 0x02
 372:	80 83       	st	Z, r24
 374:	09 c0       	rjmp	.+18     	; 0x388 <DIO_voidSetPortVal+0x76>
	case PORTC_REG:PORTC=Copy_u8Val;break;
 376:	e5 e3       	ldi	r30, 0x35	; 53
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	8a 81       	ldd	r24, Y+2	; 0x02
 37c:	80 83       	st	Z, r24
 37e:	04 c0       	rjmp	.+8      	; 0x388 <DIO_voidSetPortVal+0x76>
	case PORTD_REG:PORTD=Copy_u8Val;break;
 380:	e2 e3       	ldi	r30, 0x32	; 50
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	8a 81       	ldd	r24, Y+2	; 0x02
 386:	80 83       	st	Z, r24
	}
}
 388:	0f 90       	pop	r0
 38a:	0f 90       	pop	r0
 38c:	0f 90       	pop	r0
 38e:	0f 90       	pop	r0
 390:	cf 91       	pop	r28
 392:	df 91       	pop	r29
 394:	08 95       	ret

00000396 <DIO_voidSetPinVal>:

void DIO_voidSetPinVal(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Val)
{
 396:	df 93       	push	r29
 398:	cf 93       	push	r28
 39a:	cd b7       	in	r28, 0x3d	; 61
 39c:	de b7       	in	r29, 0x3e	; 62
 39e:	27 97       	sbiw	r28, 0x07	; 7
 3a0:	0f b6       	in	r0, 0x3f	; 63
 3a2:	f8 94       	cli
 3a4:	de bf       	out	0x3e, r29	; 62
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	cd bf       	out	0x3d, r28	; 61
 3aa:	89 83       	std	Y+1, r24	; 0x01
 3ac:	6a 83       	std	Y+2, r22	; 0x02
 3ae:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Pin <=7)
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	88 30       	cpi	r24, 0x08	; 8
 3b4:	08 f0       	brcs	.+2      	; 0x3b8 <DIO_voidSetPinVal+0x22>
 3b6:	ec c0       	rjmp	.+472    	; 0x590 <DIO_voidSetPinVal+0x1fa>
	{
		if (Copy_u8Val==PIN_VAL_HIGH)
 3b8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ba:	81 30       	cpi	r24, 0x01	; 1
 3bc:	09 f0       	breq	.+2      	; 0x3c0 <DIO_voidSetPinVal+0x2a>
 3be:	70 c0       	rjmp	.+224    	; 0x4a0 <DIO_voidSetPinVal+0x10a>
		{
			switch(Copy_u8Port)
 3c0:	89 81       	ldd	r24, Y+1	; 0x01
 3c2:	28 2f       	mov	r18, r24
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	3f 83       	std	Y+7, r19	; 0x07
 3c8:	2e 83       	std	Y+6, r18	; 0x06
 3ca:	8e 81       	ldd	r24, Y+6	; 0x06
 3cc:	9f 81       	ldd	r25, Y+7	; 0x07
 3ce:	82 30       	cpi	r24, 0x02	; 2
 3d0:	91 05       	cpc	r25, r1
 3d2:	51 f1       	breq	.+84     	; 0x428 <DIO_voidSetPinVal+0x92>
 3d4:	2e 81       	ldd	r18, Y+6	; 0x06
 3d6:	3f 81       	ldd	r19, Y+7	; 0x07
 3d8:	23 30       	cpi	r18, 0x03	; 3
 3da:	31 05       	cpc	r19, r1
 3dc:	34 f4       	brge	.+12     	; 0x3ea <DIO_voidSetPinVal+0x54>
 3de:	8e 81       	ldd	r24, Y+6	; 0x06
 3e0:	9f 81       	ldd	r25, Y+7	; 0x07
 3e2:	81 30       	cpi	r24, 0x01	; 1
 3e4:	91 05       	cpc	r25, r1
 3e6:	61 f0       	breq	.+24     	; 0x400 <DIO_voidSetPinVal+0x6a>
 3e8:	d3 c0       	rjmp	.+422    	; 0x590 <DIO_voidSetPinVal+0x1fa>
 3ea:	2e 81       	ldd	r18, Y+6	; 0x06
 3ec:	3f 81       	ldd	r19, Y+7	; 0x07
 3ee:	23 30       	cpi	r18, 0x03	; 3
 3f0:	31 05       	cpc	r19, r1
 3f2:	71 f1       	breq	.+92     	; 0x450 <DIO_voidSetPinVal+0xba>
 3f4:	8e 81       	ldd	r24, Y+6	; 0x06
 3f6:	9f 81       	ldd	r25, Y+7	; 0x07
 3f8:	84 30       	cpi	r24, 0x04	; 4
 3fa:	91 05       	cpc	r25, r1
 3fc:	e9 f1       	breq	.+122    	; 0x478 <DIO_voidSetPinVal+0xe2>
 3fe:	c8 c0       	rjmp	.+400    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			{
			case PORTA_REG : SET_BIT(PORTA,Copy_u8Pin);break;
 400:	ab e3       	ldi	r26, 0x3B	; 59
 402:	b0 e0       	ldi	r27, 0x00	; 0
 404:	eb e3       	ldi	r30, 0x3B	; 59
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	80 81       	ld	r24, Z
 40a:	48 2f       	mov	r20, r24
 40c:	8a 81       	ldd	r24, Y+2	; 0x02
 40e:	28 2f       	mov	r18, r24
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	02 2e       	mov	r0, r18
 418:	02 c0       	rjmp	.+4      	; 0x41e <DIO_voidSetPinVal+0x88>
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	0a 94       	dec	r0
 420:	e2 f7       	brpl	.-8      	; 0x41a <DIO_voidSetPinVal+0x84>
 422:	84 2b       	or	r24, r20
 424:	8c 93       	st	X, r24
 426:	b4 c0       	rjmp	.+360    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			case PORTB_REG : SET_BIT(PORTB,Copy_u8Pin);break;
 428:	a8 e3       	ldi	r26, 0x38	; 56
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	e8 e3       	ldi	r30, 0x38	; 56
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 81       	ld	r24, Z
 432:	48 2f       	mov	r20, r24
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	28 2f       	mov	r18, r24
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	02 2e       	mov	r0, r18
 440:	02 c0       	rjmp	.+4      	; 0x446 <DIO_voidSetPinVal+0xb0>
 442:	88 0f       	add	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	0a 94       	dec	r0
 448:	e2 f7       	brpl	.-8      	; 0x442 <DIO_voidSetPinVal+0xac>
 44a:	84 2b       	or	r24, r20
 44c:	8c 93       	st	X, r24
 44e:	a0 c0       	rjmp	.+320    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			case PORTC_REG : SET_BIT(PORTC,Copy_u8Pin);break;
 450:	a5 e3       	ldi	r26, 0x35	; 53
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	e5 e3       	ldi	r30, 0x35	; 53
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	48 2f       	mov	r20, r24
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 2e       	mov	r0, r18
 468:	02 c0       	rjmp	.+4      	; 0x46e <DIO_voidSetPinVal+0xd8>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	0a 94       	dec	r0
 470:	e2 f7       	brpl	.-8      	; 0x46a <DIO_voidSetPinVal+0xd4>
 472:	84 2b       	or	r24, r20
 474:	8c 93       	st	X, r24
 476:	8c c0       	rjmp	.+280    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			case PORTD_REG : SET_BIT(PORTD,Copy_u8Pin);break;
 478:	a2 e3       	ldi	r26, 0x32	; 50
 47a:	b0 e0       	ldi	r27, 0x00	; 0
 47c:	e2 e3       	ldi	r30, 0x32	; 50
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	80 81       	ld	r24, Z
 482:	48 2f       	mov	r20, r24
 484:	8a 81       	ldd	r24, Y+2	; 0x02
 486:	28 2f       	mov	r18, r24
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	02 2e       	mov	r0, r18
 490:	02 c0       	rjmp	.+4      	; 0x496 <DIO_voidSetPinVal+0x100>
 492:	88 0f       	add	r24, r24
 494:	99 1f       	adc	r25, r25
 496:	0a 94       	dec	r0
 498:	e2 f7       	brpl	.-8      	; 0x492 <DIO_voidSetPinVal+0xfc>
 49a:	84 2b       	or	r24, r20
 49c:	8c 93       	st	X, r24
 49e:	78 c0       	rjmp	.+240    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			}
		}
		else if (Copy_u8Val==PIN_VAL_LOW)
 4a0:	8b 81       	ldd	r24, Y+3	; 0x03
 4a2:	88 23       	and	r24, r24
 4a4:	09 f0       	breq	.+2      	; 0x4a8 <DIO_voidSetPinVal+0x112>
 4a6:	74 c0       	rjmp	.+232    	; 0x590 <DIO_voidSetPinVal+0x1fa>
		{
			switch(Copy_u8Port)
 4a8:	89 81       	ldd	r24, Y+1	; 0x01
 4aa:	28 2f       	mov	r18, r24
 4ac:	30 e0       	ldi	r19, 0x00	; 0
 4ae:	3d 83       	std	Y+5, r19	; 0x05
 4b0:	2c 83       	std	Y+4, r18	; 0x04
 4b2:	8c 81       	ldd	r24, Y+4	; 0x04
 4b4:	9d 81       	ldd	r25, Y+5	; 0x05
 4b6:	82 30       	cpi	r24, 0x02	; 2
 4b8:	91 05       	cpc	r25, r1
 4ba:	61 f1       	breq	.+88     	; 0x514 <DIO_voidSetPinVal+0x17e>
 4bc:	2c 81       	ldd	r18, Y+4	; 0x04
 4be:	3d 81       	ldd	r19, Y+5	; 0x05
 4c0:	23 30       	cpi	r18, 0x03	; 3
 4c2:	31 05       	cpc	r19, r1
 4c4:	34 f4       	brge	.+12     	; 0x4d2 <DIO_voidSetPinVal+0x13c>
 4c6:	8c 81       	ldd	r24, Y+4	; 0x04
 4c8:	9d 81       	ldd	r25, Y+5	; 0x05
 4ca:	81 30       	cpi	r24, 0x01	; 1
 4cc:	91 05       	cpc	r25, r1
 4ce:	69 f0       	breq	.+26     	; 0x4ea <DIO_voidSetPinVal+0x154>
 4d0:	5f c0       	rjmp	.+190    	; 0x590 <DIO_voidSetPinVal+0x1fa>
 4d2:	2c 81       	ldd	r18, Y+4	; 0x04
 4d4:	3d 81       	ldd	r19, Y+5	; 0x05
 4d6:	23 30       	cpi	r18, 0x03	; 3
 4d8:	31 05       	cpc	r19, r1
 4da:	89 f1       	breq	.+98     	; 0x53e <DIO_voidSetPinVal+0x1a8>
 4dc:	8c 81       	ldd	r24, Y+4	; 0x04
 4de:	9d 81       	ldd	r25, Y+5	; 0x05
 4e0:	84 30       	cpi	r24, 0x04	; 4
 4e2:	91 05       	cpc	r25, r1
 4e4:	09 f4       	brne	.+2      	; 0x4e8 <DIO_voidSetPinVal+0x152>
 4e6:	40 c0       	rjmp	.+128    	; 0x568 <DIO_voidSetPinVal+0x1d2>
 4e8:	53 c0       	rjmp	.+166    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			{
			case PORTA_REG : CLR_BIT(PORTA,Copy_u8Pin);break;
 4ea:	ab e3       	ldi	r26, 0x3B	; 59
 4ec:	b0 e0       	ldi	r27, 0x00	; 0
 4ee:	eb e3       	ldi	r30, 0x3B	; 59
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	80 81       	ld	r24, Z
 4f4:	48 2f       	mov	r20, r24
 4f6:	8a 81       	ldd	r24, Y+2	; 0x02
 4f8:	28 2f       	mov	r18, r24
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	02 2e       	mov	r0, r18
 502:	02 c0       	rjmp	.+4      	; 0x508 <DIO_voidSetPinVal+0x172>
 504:	88 0f       	add	r24, r24
 506:	99 1f       	adc	r25, r25
 508:	0a 94       	dec	r0
 50a:	e2 f7       	brpl	.-8      	; 0x504 <DIO_voidSetPinVal+0x16e>
 50c:	80 95       	com	r24
 50e:	84 23       	and	r24, r20
 510:	8c 93       	st	X, r24
 512:	3e c0       	rjmp	.+124    	; 0x590 <DIO_voidSetPinVal+0x1fa>
			case PORTB_REG : CLR_BIT(PORTB,Copy_u8Pin);break;
 514:	a8 e3       	ldi	r26, 0x38	; 56
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	e8 e3       	ldi	r30, 0x38	; 56
 51a:	f0 e0       	ldi	r31, 0x00	; 0
 51c:	80 81       	ld	r24, Z
 51e:	48 2f       	mov	r20, r24
 520:	8a 81       	ldd	r24, Y+2	; 0x02
 522:	28 2f       	mov	r18, r24
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	02 2e       	mov	r0, r18
 52c:	02 c0       	rjmp	.+4      	; 0x532 <DIO_voidSetPinVal+0x19c>
 52e:	88 0f       	add	r24, r24
 530:	99 1f       	adc	r25, r25
 532:	0a 94       	dec	r0
 534:	e2 f7       	brpl	.-8      	; 0x52e <DIO_voidSetPinVal+0x198>
 536:	80 95       	com	r24
 538:	84 23       	and	r24, r20
 53a:	8c 93       	st	X, r24
 53c:	29 c0       	rjmp	.+82     	; 0x590 <DIO_voidSetPinVal+0x1fa>
			case PORTC_REG : CLR_BIT(PORTC,Copy_u8Pin);break;
 53e:	a5 e3       	ldi	r26, 0x35	; 53
 540:	b0 e0       	ldi	r27, 0x00	; 0
 542:	e5 e3       	ldi	r30, 0x35	; 53
 544:	f0 e0       	ldi	r31, 0x00	; 0
 546:	80 81       	ld	r24, Z
 548:	48 2f       	mov	r20, r24
 54a:	8a 81       	ldd	r24, Y+2	; 0x02
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 2e       	mov	r0, r18
 556:	02 c0       	rjmp	.+4      	; 0x55c <DIO_voidSetPinVal+0x1c6>
 558:	88 0f       	add	r24, r24
 55a:	99 1f       	adc	r25, r25
 55c:	0a 94       	dec	r0
 55e:	e2 f7       	brpl	.-8      	; 0x558 <DIO_voidSetPinVal+0x1c2>
 560:	80 95       	com	r24
 562:	84 23       	and	r24, r20
 564:	8c 93       	st	X, r24
 566:	14 c0       	rjmp	.+40     	; 0x590 <DIO_voidSetPinVal+0x1fa>
			case PORTD_REG : CLR_BIT(PORTD,Copy_u8Pin);break;
 568:	a2 e3       	ldi	r26, 0x32	; 50
 56a:	b0 e0       	ldi	r27, 0x00	; 0
 56c:	e2 e3       	ldi	r30, 0x32	; 50
 56e:	f0 e0       	ldi	r31, 0x00	; 0
 570:	80 81       	ld	r24, Z
 572:	48 2f       	mov	r20, r24
 574:	8a 81       	ldd	r24, Y+2	; 0x02
 576:	28 2f       	mov	r18, r24
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	02 2e       	mov	r0, r18
 580:	02 c0       	rjmp	.+4      	; 0x586 <DIO_voidSetPinVal+0x1f0>
 582:	88 0f       	add	r24, r24
 584:	99 1f       	adc	r25, r25
 586:	0a 94       	dec	r0
 588:	e2 f7       	brpl	.-8      	; 0x582 <DIO_voidSetPinVal+0x1ec>
 58a:	80 95       	com	r24
 58c:	84 23       	and	r24, r20
 58e:	8c 93       	st	X, r24
			}
		}
	}
}
 590:	27 96       	adiw	r28, 0x07	; 7
 592:	0f b6       	in	r0, 0x3f	; 63
 594:	f8 94       	cli
 596:	de bf       	out	0x3e, r29	; 62
 598:	0f be       	out	0x3f, r0	; 63
 59a:	cd bf       	out	0x3d, r28	; 61
 59c:	cf 91       	pop	r28
 59e:	df 91       	pop	r29
 5a0:	08 95       	ret

000005a2 <DIO_u8GetPinVal>:


u8 DIO_u8GetPinVal(u8 Copy_u8Port,u8 Copy_u8Pin)
{
 5a2:	df 93       	push	r29
 5a4:	cf 93       	push	r28
 5a6:	00 d0       	rcall	.+0      	; 0x5a8 <DIO_u8GetPinVal+0x6>
 5a8:	00 d0       	rcall	.+0      	; 0x5aa <DIO_u8GetPinVal+0x8>
 5aa:	0f 92       	push	r0
 5ac:	cd b7       	in	r28, 0x3d	; 61
 5ae:	de b7       	in	r29, 0x3e	; 62
 5b0:	8a 83       	std	Y+2, r24	; 0x02
 5b2:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Realing=0;
 5b4:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_u8Pin <=7)
 5b6:	8b 81       	ldd	r24, Y+3	; 0x03
 5b8:	88 30       	cpi	r24, 0x08	; 8
 5ba:	08 f0       	brcs	.+2      	; 0x5be <DIO_u8GetPinVal+0x1c>
 5bc:	67 c0       	rjmp	.+206    	; 0x68c <DIO_u8GetPinVal+0xea>
	{
		switch(Copy_u8Port)
 5be:	8a 81       	ldd	r24, Y+2	; 0x02
 5c0:	28 2f       	mov	r18, r24
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	3d 83       	std	Y+5, r19	; 0x05
 5c6:	2c 83       	std	Y+4, r18	; 0x04
 5c8:	4c 81       	ldd	r20, Y+4	; 0x04
 5ca:	5d 81       	ldd	r21, Y+5	; 0x05
 5cc:	42 30       	cpi	r20, 0x02	; 2
 5ce:	51 05       	cpc	r21, r1
 5d0:	41 f1       	breq	.+80     	; 0x622 <DIO_u8GetPinVal+0x80>
 5d2:	8c 81       	ldd	r24, Y+4	; 0x04
 5d4:	9d 81       	ldd	r25, Y+5	; 0x05
 5d6:	83 30       	cpi	r24, 0x03	; 3
 5d8:	91 05       	cpc	r25, r1
 5da:	34 f4       	brge	.+12     	; 0x5e8 <DIO_u8GetPinVal+0x46>
 5dc:	2c 81       	ldd	r18, Y+4	; 0x04
 5de:	3d 81       	ldd	r19, Y+5	; 0x05
 5e0:	21 30       	cpi	r18, 0x01	; 1
 5e2:	31 05       	cpc	r19, r1
 5e4:	61 f0       	breq	.+24     	; 0x5fe <DIO_u8GetPinVal+0x5c>
 5e6:	52 c0       	rjmp	.+164    	; 0x68c <DIO_u8GetPinVal+0xea>
 5e8:	4c 81       	ldd	r20, Y+4	; 0x04
 5ea:	5d 81       	ldd	r21, Y+5	; 0x05
 5ec:	43 30       	cpi	r20, 0x03	; 3
 5ee:	51 05       	cpc	r21, r1
 5f0:	51 f1       	breq	.+84     	; 0x646 <DIO_u8GetPinVal+0xa4>
 5f2:	8c 81       	ldd	r24, Y+4	; 0x04
 5f4:	9d 81       	ldd	r25, Y+5	; 0x05
 5f6:	84 30       	cpi	r24, 0x04	; 4
 5f8:	91 05       	cpc	r25, r1
 5fa:	b9 f1       	breq	.+110    	; 0x66a <DIO_u8GetPinVal+0xc8>
 5fc:	47 c0       	rjmp	.+142    	; 0x68c <DIO_u8GetPinVal+0xea>
		{
		case PORTA_REG : Local_u8Realing=GET_BIT(PINA,Copy_u8Pin);break;
 5fe:	e9 e3       	ldi	r30, 0x39	; 57
 600:	f0 e0       	ldi	r31, 0x00	; 0
 602:	80 81       	ld	r24, Z
 604:	28 2f       	mov	r18, r24
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	8b 81       	ldd	r24, Y+3	; 0x03
 60a:	88 2f       	mov	r24, r24
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	a9 01       	movw	r20, r18
 610:	02 c0       	rjmp	.+4      	; 0x616 <DIO_u8GetPinVal+0x74>
 612:	55 95       	asr	r21
 614:	47 95       	ror	r20
 616:	8a 95       	dec	r24
 618:	e2 f7       	brpl	.-8      	; 0x612 <DIO_u8GetPinVal+0x70>
 61a:	ca 01       	movw	r24, r20
 61c:	81 70       	andi	r24, 0x01	; 1
 61e:	89 83       	std	Y+1, r24	; 0x01
 620:	35 c0       	rjmp	.+106    	; 0x68c <DIO_u8GetPinVal+0xea>
		case PORTB_REG : Local_u8Realing=GET_BIT(PINB,Copy_u8Pin);break;
 622:	e6 e3       	ldi	r30, 0x36	; 54
 624:	f0 e0       	ldi	r31, 0x00	; 0
 626:	80 81       	ld	r24, Z
 628:	28 2f       	mov	r18, r24
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	8b 81       	ldd	r24, Y+3	; 0x03
 62e:	88 2f       	mov	r24, r24
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	a9 01       	movw	r20, r18
 634:	02 c0       	rjmp	.+4      	; 0x63a <DIO_u8GetPinVal+0x98>
 636:	55 95       	asr	r21
 638:	47 95       	ror	r20
 63a:	8a 95       	dec	r24
 63c:	e2 f7       	brpl	.-8      	; 0x636 <DIO_u8GetPinVal+0x94>
 63e:	ca 01       	movw	r24, r20
 640:	81 70       	andi	r24, 0x01	; 1
 642:	89 83       	std	Y+1, r24	; 0x01
 644:	23 c0       	rjmp	.+70     	; 0x68c <DIO_u8GetPinVal+0xea>
		case PORTC_REG : Local_u8Realing=GET_BIT(PINC,Copy_u8Pin);break;
 646:	e3 e3       	ldi	r30, 0x33	; 51
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	80 81       	ld	r24, Z
 64c:	28 2f       	mov	r18, r24
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	8b 81       	ldd	r24, Y+3	; 0x03
 652:	88 2f       	mov	r24, r24
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	a9 01       	movw	r20, r18
 658:	02 c0       	rjmp	.+4      	; 0x65e <DIO_u8GetPinVal+0xbc>
 65a:	55 95       	asr	r21
 65c:	47 95       	ror	r20
 65e:	8a 95       	dec	r24
 660:	e2 f7       	brpl	.-8      	; 0x65a <DIO_u8GetPinVal+0xb8>
 662:	ca 01       	movw	r24, r20
 664:	81 70       	andi	r24, 0x01	; 1
 666:	89 83       	std	Y+1, r24	; 0x01
 668:	11 c0       	rjmp	.+34     	; 0x68c <DIO_u8GetPinVal+0xea>
		case PORTD_REG : Local_u8Realing=GET_BIT(PIND,Copy_u8Pin);break;
 66a:	e0 e3       	ldi	r30, 0x30	; 48
 66c:	f0 e0       	ldi	r31, 0x00	; 0
 66e:	80 81       	ld	r24, Z
 670:	28 2f       	mov	r18, r24
 672:	30 e0       	ldi	r19, 0x00	; 0
 674:	8b 81       	ldd	r24, Y+3	; 0x03
 676:	88 2f       	mov	r24, r24
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	a9 01       	movw	r20, r18
 67c:	02 c0       	rjmp	.+4      	; 0x682 <DIO_u8GetPinVal+0xe0>
 67e:	55 95       	asr	r21
 680:	47 95       	ror	r20
 682:	8a 95       	dec	r24
 684:	e2 f7       	brpl	.-8      	; 0x67e <DIO_u8GetPinVal+0xdc>
 686:	ca 01       	movw	r24, r20
 688:	81 70       	andi	r24, 0x01	; 1
 68a:	89 83       	std	Y+1, r24	; 0x01
		}
	}
	return Local_u8Realing;
 68c:	89 81       	ldd	r24, Y+1	; 0x01
}
 68e:	0f 90       	pop	r0
 690:	0f 90       	pop	r0
 692:	0f 90       	pop	r0
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	cf 91       	pop	r28
 69a:	df 91       	pop	r29
 69c:	08 95       	ret

0000069e <SW_voidInit>:
#include "SW_private.h"



void SW_voidInit(SW_t my_switch)
{
 69e:	df 93       	push	r29
 6a0:	cf 93       	push	r28
 6a2:	00 d0       	rcall	.+0      	; 0x6a4 <SW_voidInit+0x6>
 6a4:	0f 92       	push	r0
 6a6:	cd b7       	in	r28, 0x3d	; 61
 6a8:	de b7       	in	r29, 0x3e	; 62
 6aa:	69 83       	std	Y+1, r22	; 0x01
 6ac:	7a 83       	std	Y+2, r23	; 0x02
 6ae:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinDir(my_switch.port_con,my_switch.pin_con,PIN_DIR_IN);
 6b0:	89 81       	ldd	r24, Y+1	; 0x01
 6b2:	9a 81       	ldd	r25, Y+2	; 0x02
 6b4:	69 2f       	mov	r22, r25
 6b6:	40 e0       	ldi	r20, 0x00	; 0
 6b8:	0e 94 83 00 	call	0x106	; 0x106 <DIO_voidSetPinDir>
	if (my_switch.state==PULL_UP)
 6bc:	8b 81       	ldd	r24, Y+3	; 0x03
 6be:	81 30       	cpi	r24, 0x01	; 1
 6c0:	31 f4       	brne	.+12     	; 0x6ce <SW_voidInit+0x30>
	{
		DIO_voidSetPinVal(my_switch.port_con,my_switch.pin_con,PIN_VAL_HIGH);
 6c2:	89 81       	ldd	r24, Y+1	; 0x01
 6c4:	9a 81       	ldd	r25, Y+2	; 0x02
 6c6:	69 2f       	mov	r22, r25
 6c8:	41 e0       	ldi	r20, 0x01	; 1
 6ca:	0e 94 cb 01 	call	0x396	; 0x396 <DIO_voidSetPinVal>

	}
	
}
 6ce:	0f 90       	pop	r0
 6d0:	0f 90       	pop	r0
 6d2:	0f 90       	pop	r0
 6d4:	cf 91       	pop	r28
 6d6:	df 91       	pop	r29
 6d8:	08 95       	ret

000006da <SW_u8GetPressed>:

u8 SW_u8GetPressed(SW_t my_switch)
{
 6da:	df 93       	push	r29
 6dc:	cf 93       	push	r28
 6de:	00 d0       	rcall	.+0      	; 0x6e0 <SW_u8GetPressed+0x6>
 6e0:	00 d0       	rcall	.+0      	; 0x6e2 <SW_u8GetPressed+0x8>
 6e2:	cd b7       	in	r28, 0x3d	; 61
 6e4:	de b7       	in	r29, 0x3e	; 62
 6e6:	6a 83       	std	Y+2, r22	; 0x02
 6e8:	7b 83       	std	Y+3, r23	; 0x03
 6ea:	8c 83       	std	Y+4, r24	; 0x04
	u8 Local_u8Reading=0;
 6ec:	19 82       	std	Y+1, r1	; 0x01
	
	DIO_u8GetPinVal(my_switch.port_con,my_switch.pin_con);
 6ee:	8a 81       	ldd	r24, Y+2	; 0x02
 6f0:	9b 81       	ldd	r25, Y+3	; 0x03
 6f2:	69 2f       	mov	r22, r25
 6f4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <DIO_u8GetPinVal>
	
	return Local_u8Reading;
 6f8:	89 81       	ldd	r24, Y+1	; 0x01
}
 6fa:	0f 90       	pop	r0
 6fc:	0f 90       	pop	r0
 6fe:	0f 90       	pop	r0
 700:	0f 90       	pop	r0
 702:	cf 91       	pop	r28
 704:	df 91       	pop	r29
 706:	08 95       	ret

00000708 <main>:
#include "DIO_interface.h"
#include "SW_interface.h"
#include <util/delay.h>

void main (void)
{
 708:	df 93       	push	r29
 70a:	cf 93       	push	r28
 70c:	cd b7       	in	r28, 0x3d	; 61
 70e:	de b7       	in	r29, 0x3e	; 62
 710:	29 97       	sbiw	r28, 0x09	; 9
 712:	0f b6       	in	r0, 0x3f	; 63
 714:	f8 94       	cli
 716:	de bf       	out	0x3e, r29	; 62
 718:	0f be       	out	0x3f, r0	; 63
 71a:	cd bf       	out	0x3d, r28	; 61
	//_delay_ms(500);
	SW_t strct={PORTA_REG,PIN0,PIN_VAL_HIGH};
 71c:	ce 01       	movw	r24, r28
 71e:	02 96       	adiw	r24, 0x02	; 2
 720:	9e 83       	std	Y+6, r25	; 0x06
 722:	8d 83       	std	Y+5, r24	; 0x05
 724:	e0 e6       	ldi	r30, 0x60	; 96
 726:	f0 e0       	ldi	r31, 0x00	; 0
 728:	f8 87       	std	Y+8, r31	; 0x08
 72a:	ef 83       	std	Y+7, r30	; 0x07
 72c:	f3 e0       	ldi	r31, 0x03	; 3
 72e:	f9 87       	std	Y+9, r31	; 0x09
 730:	ef 81       	ldd	r30, Y+7	; 0x07
 732:	f8 85       	ldd	r31, Y+8	; 0x08
 734:	00 80       	ld	r0, Z
 736:	8f 81       	ldd	r24, Y+7	; 0x07
 738:	98 85       	ldd	r25, Y+8	; 0x08
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	98 87       	std	Y+8, r25	; 0x08
 73e:	8f 83       	std	Y+7, r24	; 0x07
 740:	ed 81       	ldd	r30, Y+5	; 0x05
 742:	fe 81       	ldd	r31, Y+6	; 0x06
 744:	00 82       	st	Z, r0
 746:	8d 81       	ldd	r24, Y+5	; 0x05
 748:	9e 81       	ldd	r25, Y+6	; 0x06
 74a:	01 96       	adiw	r24, 0x01	; 1
 74c:	9e 83       	std	Y+6, r25	; 0x06
 74e:	8d 83       	std	Y+5, r24	; 0x05
 750:	99 85       	ldd	r25, Y+9	; 0x09
 752:	91 50       	subi	r25, 0x01	; 1
 754:	99 87       	std	Y+9, r25	; 0x09
 756:	e9 85       	ldd	r30, Y+9	; 0x09
 758:	ee 23       	and	r30, r30
 75a:	51 f7       	brne	.-44     	; 0x730 <main+0x28>
	SW_voidInit(strct);
 75c:	6a 81       	ldd	r22, Y+2	; 0x02
 75e:	7b 81       	ldd	r23, Y+3	; 0x03
 760:	8c 81       	ldd	r24, Y+4	; 0x04
 762:	0e 94 4f 03 	call	0x69e	; 0x69e <SW_voidInit>
	u8 result= SW_u8GetPressed(strct);
 766:	6a 81       	ldd	r22, Y+2	; 0x02
 768:	7b 81       	ldd	r23, Y+3	; 0x03
 76a:	8c 81       	ldd	r24, Y+4	; 0x04
 76c:	0e 94 6d 03 	call	0x6da	; 0x6da <SW_u8GetPressed>
 770:	89 83       	std	Y+1, r24	; 0x01
	if (result==1)
 772:	89 81       	ldd	r24, Y+1	; 0x01
 774:	81 30       	cpi	r24, 0x01	; 1
 776:	29 f4       	brne	.+10     	; 0x782 <main+0x7a>
	DIO_voidSetPinVal(PORTD_REG,PIN0,result);
 778:	84 e0       	ldi	r24, 0x04	; 4
 77a:	60 e0       	ldi	r22, 0x00	; 0
 77c:	49 81       	ldd	r20, Y+1	; 0x01
 77e:	0e 94 cb 01 	call	0x396	; 0x396 <DIO_voidSetPinVal>


}
 782:	29 96       	adiw	r28, 0x09	; 9
 784:	0f b6       	in	r0, 0x3f	; 63
 786:	f8 94       	cli
 788:	de bf       	out	0x3e, r29	; 62
 78a:	0f be       	out	0x3f, r0	; 63
 78c:	cd bf       	out	0x3d, r28	; 61
 78e:	cf 91       	pop	r28
 790:	df 91       	pop	r29
 792:	08 95       	ret

00000794 <_exit>:
 794:	f8 94       	cli

00000796 <__stop_program>:
 796:	ff cf       	rjmp	.-2      	; 0x796 <__stop_program>
